AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - production
  SlackToken:
    Description: Slack OAuth Token
    Type: String
Resources:
  QuizScraperLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: 'quizScraper.handler'
      Environment:
        Variables:
          "SLACK_TOKEN": !Ref SlackToken
      Code:
        S3Bucket: 'nz.govt.education.webservices-public'
        S3Key: 'lambda/quizScraper'
      Description: !Sub 'This Lambda function will scrape the Stuff Quiz page for the most recent quiz'
      Role: !GetAtt QuizScraperLambdaRole.Arn
      Runtime: nodejs12.x
      Timeout: 12
  QuizScraperLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/service-role/"
      Policies:
      - PolicyName: !Sub 'QuizScraperLambdaExecutionRole'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/QuizScraper:*'
  ScheduledRule:
    Type: AWS::Events::Rule
    Properties: 
      Description: 'Cloudwatch event that invokes the lambda script that posts to slack'
      ScheduleExpression: cron(2 2,20 * * ? *)
      Targets:
        - Arn: !GetAtt QuizScraperLambda.Arn
          Id: 'TargetFunctionV1'
  PermissionForEventToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "QuizScraperLambda"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ScheduledRule"
          - "Arn"
  QuizScoresDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: 'ScoreId'
        AttributeType: 'S'
      - AttributeName: 'UserId'
        AttributeType: 'S'
      KeySchema:
      - AttributeName: 'ScoreId'
        KeyType: HASH
      GlobalSecondaryIndexes:
        -
          IndexName: "user-index"
          KeySchema:
            - AttributeName: UserId
              KeyType: HASH
          Projection:
            NonKeyAttributes: []
            ProjectionType: "ALL"